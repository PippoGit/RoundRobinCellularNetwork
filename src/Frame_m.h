//
// Generated file, do not edit! Created by nedtool 5.5 from Frame.msg.
//

#ifndef __FRAME_M_H
#define __FRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "ResourceBlock.h"
#include "constants.h"
// }}

/**
 * Class generated from <tt>Frame.msg:8</tt> by nedtool.
 * <pre>
 * message Frame
 * {
 *     ResourceBlock RBFrame[FRAME_SIZE];
 *     simtime_t sumWaitingTimes;
 *     simtime_t sumServiceTimes;
 *     int numPackets;
 * }
 * </pre>
 */
class Frame : public ::omnetpp::cMessage
{
  protected:
    ResourceBlock RBFrame[FRAME_SIZE];
    ::omnetpp::simtime_t sumWaitingTimes;
    ::omnetpp::simtime_t sumServiceTimes;
    int numPackets;

  private:
    void copy(const Frame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Frame&);

  public:
    Frame(const char *name=nullptr, short kind=0);
    Frame(const Frame& other);
    virtual ~Frame();
    Frame& operator=(const Frame& other);
    virtual Frame *dup() const override {return new Frame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getRBFrameArraySize() const;
    virtual ResourceBlock& getRBFrame(unsigned int k);
    virtual const ResourceBlock& getRBFrame(unsigned int k) const {return const_cast<Frame*>(this)->getRBFrame(k);}
    virtual void setRBFrame(unsigned int k, const ResourceBlock& RBFrame);
    virtual ::omnetpp::simtime_t getSumWaitingTimes() const;
    virtual void setSumWaitingTimes(::omnetpp::simtime_t sumWaitingTimes);
    virtual ::omnetpp::simtime_t getSumServiceTimes() const;
    virtual void setSumServiceTimes(::omnetpp::simtime_t sumServiceTimes);
    virtual int getNumPackets() const;
    virtual void setNumPackets(int numPackets);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Frame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Frame& obj) {obj.parsimUnpack(b);}


#endif // ifndef __FRAME_M_H

